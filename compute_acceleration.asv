function stateDerivative = compute_acceleration(state, input, forceExt)
    global par
    velocity = state(1:length(state)/2);
    con = zeros(length(forceExt),
    for i = 1:length(velocity)
        evalString = ['generated/convective/getDoubleJ',par.symNames{i},'(state)'];
        con(:,i) = eval(evalString)*velocity;
    end
    J = jacobian_matrix(state);
    M = J'*par.mass*J;
    f = J'*(par.fz - M*con*velocity);
    stateDerivative = [M\f; velocity];